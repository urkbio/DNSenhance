DNS增强功能说明

1. 智能缓存机制
   - 基本缓存：缓存所有DNS查询结果，减少重复查询
   - 过期处理：缓存过期后5分钟内仍可使用，避免DNS服务器临时故障影响
   - 预更新：对每小时查询超过20次的域名进行预更新，提高热门域名的响应速度
   - 错误降级：DNS查询失败时尝试使用过期缓存，提高可用性

2. 智能分流
   - 国内外分流：根据域名智能选择国内或国外DNS服务器
   - 负载均衡：在多个上游DNS服务器间进行负载均衡
   - 故障转移：自动跳过失败的DNS服务器

3. 数据统计
   - 查询统计：总查询数、成功数、失败数、缓存命中等
   - 性能监控：DNS查询延迟、缓存命中率等
   - 域名分析：热门域名统计、查询类型分布等
   - 地理分布：国内外查询比例统计

4. 可视化界面
   - 实时监控：查询量、延迟等实时数据展示
   - 趋势图表：24小时内各类数据的变化趋势
   - 日志查看：详细的DNS查询日志，支持搜索和过滤

5. 系统优化
   - 内存优化：使用对象池复用DNS消息对象
   - 并发控制：使用互斥锁和读写锁保证并发安全
   - 异步处理：缓存更新、数据持久化等采用异步处理
   - 定时维护：自动清理过期缓存、保存统计数据等

缓存过期处理：
添加了5分钟的宽限期，在此期间过期的缓存仍然可以使用
在 Get 和 GetWithStale 方法中都添加了这个逻辑
过期5分钟内的缓存不会被标记为 stale
热门域名预更新：
添加了 LastHit 和 HitCount 字段跟踪域名访问情况
每次访问时更新这些统计信息
每小时重置访问计数
对于每小时访问超过20次的域名进行预更新
预更新机制：
添加了 OnPreUpdate 回调函数，用于实际的预更新操作
每小时检查一次热门域名
异步进行预更新，避免阻塞主流程
持久化改进：
在持久化数据中也包含了访问统计信息
确保重启后能够保持统计数据# 查询一个域名
nslookup example.com 127.0.0.1

# 断开网络连接
# 5分钟内再次查询同一域名，应该仍能得到响应
nslookup example.com 127.0.0.1# 查询一个域名
nslookup example.com 127.0.0.1

# 断开网络连接
# 5分钟内再次查询同一域名，应该仍能得到响应
nslookup example.com 127.0.0.1